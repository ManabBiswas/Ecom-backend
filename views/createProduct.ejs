<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create Product</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-up': 'slideUp 0.3s ease-out',
                        'bounce-subtle': 'bounceSubtle 0.6s ease-in-out',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0', transform: 'translateY(10px)' },
                            '100%': { opacity: '1', transform: 'translateY(0)' }
                        },
                        slideUp: {
                            '0%': { opacity: '0', transform: 'translateY(20px)' },
                            '100%': { opacity: '1', transform: 'translateY(0)' }
                        },
                        bounceSubtle: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-5px)' }
                        }
                    }
                }
            }
        }
    </script>
</head>

<body class="min-h-screen bg-gradient-to-br from-violet-50 via-purple-50 to-pink-50">
    <!-- Main Container -->
    <div class="min-h-screen flex items-center justify-center p-4 sm:p-6 lg:p-8">
        <div class="w-full max-w-4xl">
            <!-- Header Section -->
            <div class="text-center mb-8 animate-fade-in">
                <h1 class="text-3xl sm:text-4xl lg:text-5xl font-black text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-pink-600 mb-4">
                    ‚ú® Create New Product
                </h1>
                <p class="text-gray-600 text-sm sm:text-base max-w-md mx-auto">
                    Build amazing products with our intuitive creation form
                </p>
            </div>

            <!-- Form Container -->
            <div class="bg-white/80 backdrop-blur-xl rounded-3xl shadow-2xl border border-white/20 overflow-hidden animate-slide-up">
                <!-- Success Message -->
                <div id="successMessage" class="hidden bg-gradient-to-r from-green-500 to-emerald-500 text-white p-4 text-center font-medium">
                    <span class="inline-flex items-center gap-2">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                        </svg>
                        Product created successfully!
                    </span>
                </div>

                <!-- Error Message -->
                <div id="errorMessage" class="hidden bg-gradient-to-r from-red-500 to-pink-500 text-white p-4 text-center font-medium">
                    <span class="inline-flex items-center gap-2">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                        </svg>
                        Something went wrong. Please try again.
                    </span>
                </div>

                <!-- Form -->
                <form action="/products/create" method="POST" enctype="multipart/form-data" class="p-6 sm:p-8 lg:p-10">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-8">
                        
                        <!-- Left Column -->
                        <div class="space-y-6">
                            <!-- Product Name -->
                            <div class="group">
                                <label for="name" class="block text-sm font-semibold text-gray-700 mb-2 transition-colors group-focus-within:text-purple-600">
                                    Product Name *
                                </label>
                                <input
                                    type="text"
                                    name="name"
                                    id="name"
                                    required
                                    class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-purple-500 focus:ring-4 focus:ring-purple-100 transition-all duration-200 placeholder-gray-400"
                                    placeholder="Enter an amazing product name"
                                />
                            </div>

                            <!-- Price & Discount Row -->
                            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                                <div class="group">
                                    <label for="price" class="block text-sm font-semibold text-gray-700 mb-2 transition-colors group-focus-within:text-purple-600">
                                        Price (‚Çπ) *
                                    </label>
                                    <div class="relative">
                                        <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 font-medium">‚Çπ</span>
                                        <input
                                            type="number"
                                            name="price"
                                            id="price"
                                            required
                                            min="0"
                                            step="0.01"
                                            class="w-full pl-8 pr-4 py-3 rounded-xl border-2 border-gray-200 focus:border-purple-500 focus:ring-4 focus:ring-purple-100 transition-all duration-200"
                                            placeholder="0.00"
                                        />
                                    </div>
                                </div>

                                <div class="group">
                                    <label for="discount" class="block text-sm font-semibold text-gray-700 mb-2 transition-colors group-focus-within:text-purple-600">
                                        Discount (%)
                                    </label>
                                    <div class="relative">
                                        <input
                                            type="number"
                                            name="discount"
                                            id="discount"
                                            min="0"
                                            max="100"
                                            value="0"
                                            class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-purple-500 focus:ring-4 focus:ring-purple-100 transition-all duration-200"
                                            placeholder="0"
                                        />
                                        <span class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 font-medium">%</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Category -->
                            <div class="group">
                                <label for="category" class="block text-sm font-semibold text-gray-700 mb-2 transition-colors group-focus-within:text-purple-600">
                                    Category *
                                </label>
                                <div class="relative">
                                    <select
                                        name="category"
                                        id="category"
                                        required
                                        class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-purple-500 focus:ring-4 focus:ring-purple-100 transition-all duration-200 bg-white appearance-none cursor-pointer"
                                    >
                                        <option value="">Select a category</option>
                                        <option value="electronics">üì± Electronics</option>
                                        <option value="clothing">üëï Clothing</option>
                                        <option value="home">üè† Home & Garden</option>
                                        <option value="books">üìö Books</option>
                                        <option value="sports">‚öΩ Sports & Outdoors</option>
                                        <option value="toys">üß∏ Toys & Games</option>
                                        <option value="beauty">üíÑ Beauty & Personal Care</option>
                                        <option value="automotive">üöó Automotive</option>
                                        <option value="food">üçï Food & Beverages</option>
                                        <option value="other">üì¶ Other</option>
                                    </select>
                                    <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                                        </svg>
                                    </div>
                                </div>
                            </div>

                            <!-- Color Scheme Section -->
                            <div class="bg-gradient-to-br from-gray-50 to-gray-100 rounded-2xl p-6 border border-gray-200">
                                <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center gap-2">
                                    üé® Color Scheme
                                </h3>
                                
                                <div class="space-y-4">
                                    <!-- Background Color -->
                                    <div class="flex items-center gap-4">
                                        <div class="flex-shrink-0">
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Background</label>
                                            <input
                                                type="color"
                                                name="bgColor"
                                                id="bgColor"
                                                value="#ffffff"
                                                required
                                                class="w-12 h-12 rounded-lg border-2 border-gray-300 cursor-pointer transition-transform hover:scale-105"
                                            />
                                        </div>
                                        <div class="flex-1">
                                            <input
                                                type="text"
                                                id="bgColorText"
                                                placeholder="#ffffff"
                                                class="w-full px-3 py-2 text-sm rounded-lg border border-gray-300 focus:border-purple-500 focus:ring-2 focus:ring-purple-100 transition-all duration-200"
                                            />
                                        </div>
                                    </div>

                                    <!-- Text Color -->
                                    <div class="flex items-center gap-4">
                                        <div class="flex-shrink-0">
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Text</label>
                                            <input
                                                type="color"
                                                name="textColor"
                                                id="textColor"
                                                value="#000000"
                                                required
                                                class="w-12 h-12 rounded-lg border-2 border-gray-300 cursor-pointer transition-transform hover:scale-105"
                                            />
                                        </div>
                                        <div class="flex-1">
                                            <input
                                                type="text"
                                                id="textColorText"
                                                placeholder="#000000"
                                                class="w-full px-3 py-2 text-sm rounded-lg border border-gray-300 focus:border-purple-500 focus:ring-2 focus:ring-purple-100 transition-all duration-200"
                                            />
                                        </div>
                                    </div>

                                    <!-- Panel Color -->
                                    <div class="flex items-center gap-4">
                                        <div class="flex-shrink-0">
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Panel</label>
                                            <input
                                                type="color"
                                                name="panelColor"
                                                id="panelColor"
                                                value="#f0f0f0"
                                                required
                                                class="w-12 h-12 rounded-lg border-2 border-gray-300 cursor-pointer transition-transform hover:scale-105"
                                            />
                                        </div>
                                        <div class="flex-1">
                                            <input
                                                type="text"
                                                id="panelColorText"
                                                placeholder="#f0f0f0"
                                                class="w-full px-3 py-2 text-sm rounded-lg border border-gray-300 focus:border-purple-500 focus:ring-2 focus:ring-purple-100 transition-all duration-200"
                                            />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Right Column -->
                        <div class="space-y-6">
                            <!-- Image Upload Section -->
                            <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-6 border border-blue-200">
                                <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center gap-2">
                                    üì∏ Product Image
                                </h3>
                                
                                <!-- File Input -->
                                <div class="group">
                                    <label for="image" class="block text-sm font-semibold text-gray-700 mb-3">
                                        Choose Image *
                                    </label>
                                    <div class="relative">
                                        <input
                                            type="file"
                                            name="image"
                                            id="image"
                                            required
                                            accept="image/*"
                                            class="hidden"
                                            onchange="previewImage(event)"
                                        />
                                        <label for="image" class="flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-blue-300 rounded-xl cursor-pointer bg-blue-50/50 hover:bg-blue-100/50 transition-all duration-200 group-hover:border-blue-400">
                                            <div class="flex flex-col items-center justify-center pt-5 pb-6">
                                                <svg class="w-8 h-8 mb-3 text-blue-400 group-hover:text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"/>
                                                </svg>
                                                <p class="mb-2 text-sm text-blue-600 font-medium">
                                                    <span>Click to upload</span> or drag and drop
                                                </p>
                                                <p class="text-xs text-blue-400">PNG, JPG, GIF up to 10MB</p>
                                            </div>
                                        </label>
                                    </div>
                                </div>

                                <!-- Image Preview -->
                                <div id="imagePreviewContainer" class="hidden mt-6 animate-fade-in">
                                    <div class="bg-white rounded-xl p-4 border border-gray-200 shadow-sm">
                                        <div class="flex justify-between items-center mb-4">
                                            <h4 class="text-base font-bold text-gray-700 flex items-center gap-2">
                                                üñºÔ∏è Preview
                                            </h4>
                                            <button
                                                type="button"
                                                onclick="removeImage()"
                                                class="bg-red-500 hover:bg-red-600 text-white rounded-full w-8 h-8 flex items-center justify-center text-lg font-bold transition-all duration-200 hover:scale-105"
                                            >
                                                √ó
                                            </button>
                                        </div>

                                        <div class="flex flex-col sm:flex-row gap-4 items-start">
                                            <img
                                                id="imagePreview"
                                                src=""
                                                alt="Preview"
                                                class="w-full sm:w-32 h-32 object-cover rounded-lg border-2 border-gray-200 shadow-sm"
                                            />
                                            <div class="flex-1 min-w-0">
                                                <p id="fileName" class="font-semibold text-gray-800 mb-2 truncate"></p>
                                                <div id="fileSize" class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Live Preview Section -->
                            <div class="bg-gradient-to-br from-purple-50 to-pink-50 rounded-2xl p-6 border border-purple-200">
                                <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center gap-2">
                                    üëÄ Live Preview
                                </h3>
                                <div id="livePreview" class="bg-white rounded-xl p-4 border-2 border-dashed border-gray-300 min-h-[120px] flex items-center justify-center">
                                    <p class="text-gray-400 text-sm">Preview will appear here as you fill the form</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <div class="mt-8 pt-6 border-t border-gray-200">
                        <button
                            type="submit"
                            class="w-full py-4 px-6 text-lg font-bold bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white rounded-2xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-[1.02] active:scale-[0.98] animate-bounce-subtle"
                        >
                            <span class="flex items-center justify-center gap-3">
                                üöÄ Create Amazing Product
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                                </svg>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Color picker synchronization
        function setupColorSync(colorId, textId) {
            const colorInput = document.getElementById(colorId);
            const textInput = document.getElementById(textId);
            
            colorInput.addEventListener('change', function() {
                textInput.value = this.value;
                updateLivePreview();
            });
            
            textInput.addEventListener('input', function() {
                if (this.value.match(/^#[0-9A-F]{6}$/i)) {
                    colorInput.value = this.value;
                }
                updateLivePreview();
            });
        }

        // Setup color synchronization
        setupColorSync('bgColor', 'bgColorText');
        setupColorSync('textColor', 'textColorText');
        setupColorSync('panelColor', 'panelColorText');

        // Image preview functionality
        function previewImage(event) {
            const file = event.target.files[0];
            const previewContainer = document.getElementById('imagePreviewContainer');
            const imagePreview = document.getElementById('imagePreview');
            const fileName = document.getElementById('fileName');
            const fileSize = document.getElementById('fileSize');

            if (file) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    fileName.textContent = file.name;
                    fileSize.textContent = formatFileSize(file.size);
                    previewContainer.classList.remove('hidden');
                    updateLivePreview();
                };

                reader.readAsDataURL(file);
            } else {
                removeImage();
            }
        }

        function removeImage() {
            const previewContainer = document.getElementById('imagePreviewContainer');
            const imageInput = document.getElementById('image');
            const imagePreview = document.getElementById('imagePreview');

            imageInput.value = '';
            imagePreview.src = '';
            previewContainer.classList.add('hidden');
            updateLivePreview();
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Live preview functionality
        function updateLivePreview() {
            const preview = document.getElementById('livePreview');
            const name = document.getElementById('name').value;
            const price = document.getElementById('price').value;
            const discount = document.getElementById('discount').value;
            const bgColor = document.getElementById('bgColor').value;
            const textColor = document.getElementById('textColor').value;
            const panelColor = document.getElementById('panelColor').value;
            const imagePreview = document.getElementById('imagePreview').src;

            if (name || price || imagePreview) {
                const discountedPrice = discount ? (price * (1 - discount/100)).toFixed(2) : price;
                
                preview.innerHTML = `
                    <div class="w-full p-4 rounded-lg shadow-sm" style="background-color: ${bgColor}; color: ${textColor};">
                        <div class="flex items-center gap-4">
                            ${imagePreview ? `<img src="${imagePreview}" alt="Product" class="w-16 h-16 object-cover rounded-lg">` : '<div class="w-16 h-16 bg-gray-200 rounded-lg flex items-center justify-center text-gray-400 text-xs">No Image</div>'}
                            <div class="flex-1">
                                <h4 class="font-bold text-lg">${name || 'Product Name'}</h4>
                                <div class="flex items-center gap-2">
                                    ${discount > 0 ? `<span class="text-sm line-through opacity-60">‚Çπ${price}</span>` : ''}
                                    <span class="font-bold">‚Çπ${discountedPrice || price || '0.00'}</span>
                                    ${discount > 0 ? `<span class="text-xs px-2 py-1 rounded-full" style="background-color: ${panelColor};">${discount}% OFF</span>` : ''}
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            } else {
                preview.innerHTML = '<p class="text-gray-400 text-sm">Preview will appear here as you fill the form</p>';
            }
        }

        // Add event listeners for live preview
        ['name', 'price', 'discount'].forEach(id => {
            document.getElementById(id).addEventListener('input', updateLivePreview);
        });

        // Auto-hide flash messages
        function hideMessage(elementId) {
            const element = document.getElementById(elementId);
            if (element && !element.classList.contains('hidden')) {
                setTimeout(() => {
                    element.style.transition = 'opacity 0.5s ease-out, transform 0.5s ease-out';
                    element.style.opacity = '0';
                    element.style.transform = 'translateY(-20px)';
                    setTimeout(() => {
                        element.classList.add('hidden');
                    }, 500);
                }, 5000);
            }
        }

        // Show flash messages if they exist (you can call these based on server response)
        // hideMessage('successMessage');
        // hideMessage('errorMessage');

        // Form validation and submission
        document.querySelector('form').addEventListener('submit', function(e) {
            const requiredFields = ['name', 'price', 'image', 'bgColor', 'textColor', 'panelColor', 'category'];
            let hasErrors = false;

            requiredFields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                if (!field.value.trim()) {
                    field.classList.add('border-red-500', 'ring-red-100');
                    field.classList.remove('border-gray-200');
                    hasErrors = true;
                } else {
                    field.classList.remove('border-red-500', 'ring-red-100');
                    field.classList.add('border-gray-200');
                }
            });

            if (hasErrors) {
                e.preventDefault();
                // Show error message
                const errorMsg = document.getElementById('errorMessage');
                errorMsg.classList.remove('hidden');
                errorMsg.scrollIntoView({ behavior: 'smooth', block: 'center' });
                hideMessage('errorMessage');
            }
        });
    </script>
</body>
</html>